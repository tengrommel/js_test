反向代理
有反向代理就肯定有正向代理，对于正向代理我们接触得比较多，比如我们想访问一些国外的网站，可是由于政府的限制，我们必须通过
香港的HTTP代理就可以访问国外网站了。在此香港这个HTTP代理就是正向代理。
对外服务的API服务，初期我们启动一台服务器、一个Node.js进程就可以完成负载，但是随着后期访问量的加大，一个进程，一台服务器
已经不能满足我们的需求了，这时Nginx就可以发挥自己反向代理的能力。我们可以在Nginx后端添加多个服务器或启动多个进程来分担
访问压力。

1、静态文件性能
    Node.js的静态文件处理性能能受制于它的单线程异步I/O模型，注定了静态文件性能不会很好。
2、反向代理规则
    有时会存在方向代理服务器配置多样化的情况，有时我们希望配制较好的机器能够分担更多的压力，有时因为session的关系，
    我们需要将同一源IP的客户端全转发到同一个进程上，对于诸如如此类的规则，使用Nginx的配置文件就可以简单实现。
3、扩展性
    Nginx可以加入许多扩展来帮助我们处理业务
4、稳定性和转发性能
    对Nginx的稳定性大家有目共睹，Nginx在同样的负载下，相比Node.js占用的CPU和内存资源更少。
5、安全性
6、运维管理
